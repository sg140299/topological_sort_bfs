#include<bits/stdc++.h>
using namespace std;
#define N 100005

vector<int>adj[N];
void add_edge(int x,int y){
    adj[x].push_back(y);
}
void bfs(int src,int n){
    int indegree[n+1]={0};
    
    for(int i=1;i<=n;i++){
        for(auto neigh: adj[i]){
            indegree[neigh]++;
        }
    }
    queue<int>q;
    for(int i=1;i<=n;i++){
        if(indegree[i]==0){
            q.push(i);
        }
    }
    while(!q.empty()){
        int node=q.front();
        q.pop();
        cout<<node-1<<" ";
        for(auto neigh :adj[node]){
            //reduce the indegree of its neigh by 1
            indegree[neigh]-=1;
            if(indegree[neigh]==0){//add in queue if indegree is 0
                q.push(neigh);
            }
        }
    }
}
int main(){
    add_edge(1,3);
    add_edge(2,3);
    add_edge(3,6);
    add_edge(3,4);
    add_edge(4,6);
    add_edge(5,6);
    add_edge(2,5);
    bfs(1,6);
    return 0;
}
